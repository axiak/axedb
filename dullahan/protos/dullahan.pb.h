// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dullahan.proto

#ifndef PROTOBUF_dullahan_2eproto__INCLUDED
#define PROTOBUF_dullahan_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dullahan {
namespace models {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_dullahan_2eproto();
void protobuf_AssignDesc_dullahan_2eproto();
void protobuf_ShutdownFile_dullahan_2eproto();

class Record;
class Record_KeyValue;
class TabletMetadata;
class TabletMetadata_ColumnMetadata;

enum TabletMetadata_ColumnMetadata_IndexType {
  TabletMetadata_ColumnMetadata_IndexType_BITMAP = 0
};
bool TabletMetadata_ColumnMetadata_IndexType_IsValid(int value);
const TabletMetadata_ColumnMetadata_IndexType TabletMetadata_ColumnMetadata_IndexType_IndexType_MIN = TabletMetadata_ColumnMetadata_IndexType_BITMAP;
const TabletMetadata_ColumnMetadata_IndexType TabletMetadata_ColumnMetadata_IndexType_IndexType_MAX = TabletMetadata_ColumnMetadata_IndexType_BITMAP;
const int TabletMetadata_ColumnMetadata_IndexType_IndexType_ARRAYSIZE = TabletMetadata_ColumnMetadata_IndexType_IndexType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TabletMetadata_ColumnMetadata_IndexType_descriptor();
inline const ::std::string& TabletMetadata_ColumnMetadata_IndexType_Name(TabletMetadata_ColumnMetadata_IndexType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TabletMetadata_ColumnMetadata_IndexType_descriptor(), value);
}
inline bool TabletMetadata_ColumnMetadata_IndexType_Parse(
    const ::std::string& name, TabletMetadata_ColumnMetadata_IndexType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TabletMetadata_ColumnMetadata_IndexType>(
    TabletMetadata_ColumnMetadata_IndexType_descriptor(), name, value);
}
enum TabletMetadata_Endianness {
  TabletMetadata_Endianness_BIG = 0,
  TabletMetadata_Endianness_LITTLE = 1
};
bool TabletMetadata_Endianness_IsValid(int value);
const TabletMetadata_Endianness TabletMetadata_Endianness_Endianness_MIN = TabletMetadata_Endianness_BIG;
const TabletMetadata_Endianness TabletMetadata_Endianness_Endianness_MAX = TabletMetadata_Endianness_LITTLE;
const int TabletMetadata_Endianness_Endianness_ARRAYSIZE = TabletMetadata_Endianness_Endianness_MAX + 1;

const ::google::protobuf::EnumDescriptor* TabletMetadata_Endianness_descriptor();
inline const ::std::string& TabletMetadata_Endianness_Name(TabletMetadata_Endianness value) {
  return ::google::protobuf::internal::NameOfEnum(
    TabletMetadata_Endianness_descriptor(), value);
}
inline bool TabletMetadata_Endianness_Parse(
    const ::std::string& name, TabletMetadata_Endianness* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TabletMetadata_Endianness>(
    TabletMetadata_Endianness_descriptor(), name, value);
}
// ===================================================================

class Record_KeyValue : public ::google::protobuf::Message {
 public:
  Record_KeyValue();
  virtual ~Record_KeyValue();

  Record_KeyValue(const Record_KeyValue& from);

  inline Record_KeyValue& operator=(const Record_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Record_KeyValue& default_instance();

  void Swap(Record_KeyValue* other);

  // implements Message ----------------------------------------------

  Record_KeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Record_KeyValue& from);
  void MergeFrom(const Record_KeyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 column = 1;
  inline bool has_column() const;
  inline void clear_column();
  static const int kColumnFieldNumber = 1;
  inline ::google::protobuf::uint32 column() const;
  inline void set_column(::google::protobuf::uint32 value);

  // optional bytes value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const void* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:dullahan.models.Record.KeyValue)
 private:
  inline void set_has_column();
  inline void clear_has_column();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* value_;
  ::google::protobuf::uint32 column_;
  friend void  protobuf_AddDesc_dullahan_2eproto();
  friend void protobuf_AssignDesc_dullahan_2eproto();
  friend void protobuf_ShutdownFile_dullahan_2eproto();

  void InitAsDefaultInstance();
  static Record_KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class Record : public ::google::protobuf::Message {
 public:
  Record();
  virtual ~Record();

  Record(const Record& from);

  inline Record& operator=(const Record& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Record& default_instance();

  void Swap(Record* other);

  // implements Message ----------------------------------------------

  Record* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Record& from);
  void MergeFrom(const Record& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Record_KeyValue KeyValue;

  // accessors -------------------------------------------------------

  // optional fixed64 timestamp = 1;
  inline bool has_timestamp() const;
  inline void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  inline ::google::protobuf::uint64 timestamp() const;
  inline void set_timestamp(::google::protobuf::uint64 value);

  // optional bytes id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const void* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // repeated .dullahan.models.Record.KeyValue values = 3;
  inline int values_size() const;
  inline void clear_values();
  static const int kValuesFieldNumber = 3;
  inline const ::dullahan::models::Record_KeyValue& values(int index) const;
  inline ::dullahan::models::Record_KeyValue* mutable_values(int index);
  inline ::dullahan::models::Record_KeyValue* add_values();
  inline const ::google::protobuf::RepeatedPtrField< ::dullahan::models::Record_KeyValue >&
      values() const;
  inline ::google::protobuf::RepeatedPtrField< ::dullahan::models::Record_KeyValue >*
      mutable_values();

  // @@protoc_insertion_point(class_scope:dullahan.models.Record)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 timestamp_;
  ::std::string* id_;
  ::google::protobuf::RepeatedPtrField< ::dullahan::models::Record_KeyValue > values_;
  friend void  protobuf_AddDesc_dullahan_2eproto();
  friend void protobuf_AssignDesc_dullahan_2eproto();
  friend void protobuf_ShutdownFile_dullahan_2eproto();

  void InitAsDefaultInstance();
  static Record* default_instance_;
};
// -------------------------------------------------------------------

class TabletMetadata_ColumnMetadata : public ::google::protobuf::Message {
 public:
  TabletMetadata_ColumnMetadata();
  virtual ~TabletMetadata_ColumnMetadata();

  TabletMetadata_ColumnMetadata(const TabletMetadata_ColumnMetadata& from);

  inline TabletMetadata_ColumnMetadata& operator=(const TabletMetadata_ColumnMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TabletMetadata_ColumnMetadata& default_instance();

  void Swap(TabletMetadata_ColumnMetadata* other);

  // implements Message ----------------------------------------------

  TabletMetadata_ColumnMetadata* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TabletMetadata_ColumnMetadata& from);
  void MergeFrom(const TabletMetadata_ColumnMetadata& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TabletMetadata_ColumnMetadata_IndexType IndexType;
  static const IndexType BITMAP = TabletMetadata_ColumnMetadata_IndexType_BITMAP;
  static inline bool IndexType_IsValid(int value) {
    return TabletMetadata_ColumnMetadata_IndexType_IsValid(value);
  }
  static const IndexType IndexType_MIN =
    TabletMetadata_ColumnMetadata_IndexType_IndexType_MIN;
  static const IndexType IndexType_MAX =
    TabletMetadata_ColumnMetadata_IndexType_IndexType_MAX;
  static const int IndexType_ARRAYSIZE =
    TabletMetadata_ColumnMetadata_IndexType_IndexType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  IndexType_descriptor() {
    return TabletMetadata_ColumnMetadata_IndexType_descriptor();
  }
  static inline const ::std::string& IndexType_Name(IndexType value) {
    return TabletMetadata_ColumnMetadata_IndexType_Name(value);
  }
  static inline bool IndexType_Parse(const ::std::string& name,
      IndexType* value) {
    return TabletMetadata_ColumnMetadata_IndexType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 column = 1;
  inline bool has_column() const;
  inline void clear_column();
  static const int kColumnFieldNumber = 1;
  inline ::google::protobuf::uint32 column() const;
  inline void set_column(::google::protobuf::uint32 value);

  // optional .dullahan.models.TabletMetadata.ColumnMetadata.IndexType type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::dullahan::models::TabletMetadata_ColumnMetadata_IndexType type() const;
  inline void set_type(::dullahan::models::TabletMetadata_ColumnMetadata_IndexType value);

  // @@protoc_insertion_point(class_scope:dullahan.models.TabletMetadata.ColumnMetadata)
 private:
  inline void set_has_column();
  inline void clear_has_column();
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 column_;
  int type_;
  friend void  protobuf_AddDesc_dullahan_2eproto();
  friend void protobuf_AssignDesc_dullahan_2eproto();
  friend void protobuf_ShutdownFile_dullahan_2eproto();

  void InitAsDefaultInstance();
  static TabletMetadata_ColumnMetadata* default_instance_;
};
// -------------------------------------------------------------------

class TabletMetadata : public ::google::protobuf::Message {
 public:
  TabletMetadata();
  virtual ~TabletMetadata();

  TabletMetadata(const TabletMetadata& from);

  inline TabletMetadata& operator=(const TabletMetadata& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TabletMetadata& default_instance();

  void Swap(TabletMetadata* other);

  // implements Message ----------------------------------------------

  TabletMetadata* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TabletMetadata& from);
  void MergeFrom(const TabletMetadata& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef TabletMetadata_ColumnMetadata ColumnMetadata;

  typedef TabletMetadata_Endianness Endianness;
  static const Endianness BIG = TabletMetadata_Endianness_BIG;
  static const Endianness LITTLE = TabletMetadata_Endianness_LITTLE;
  static inline bool Endianness_IsValid(int value) {
    return TabletMetadata_Endianness_IsValid(value);
  }
  static const Endianness Endianness_MIN =
    TabletMetadata_Endianness_Endianness_MIN;
  static const Endianness Endianness_MAX =
    TabletMetadata_Endianness_Endianness_MAX;
  static const int Endianness_ARRAYSIZE =
    TabletMetadata_Endianness_Endianness_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Endianness_descriptor() {
    return TabletMetadata_Endianness_descriptor();
  }
  static inline const ::std::string& Endianness_Name(Endianness value) {
    return TabletMetadata_Endianness_Name(value);
  }
  static inline bool Endianness_Parse(const ::std::string& name,
      Endianness* value) {
    return TabletMetadata_Endianness_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint64 last_tablet_id = 1;
  inline bool has_last_tablet_id() const;
  inline void clear_last_tablet_id();
  static const int kLastTabletIdFieldNumber = 1;
  inline ::google::protobuf::uint64 last_tablet_id() const;
  inline void set_last_tablet_id(::google::protobuf::uint64 value);

  // optional .dullahan.models.TabletMetadata.Endianness written_endianness = 2;
  inline bool has_written_endianness() const;
  inline void clear_written_endianness();
  static const int kWrittenEndiannessFieldNumber = 2;
  inline ::dullahan::models::TabletMetadata_Endianness written_endianness() const;
  inline void set_written_endianness(::dullahan::models::TabletMetadata_Endianness value);

  // optional uint32 size_of_bitword = 3;
  inline bool has_size_of_bitword() const;
  inline void clear_size_of_bitword();
  static const int kSizeOfBitwordFieldNumber = 3;
  inline ::google::protobuf::uint32 size_of_bitword() const;
  inline void set_size_of_bitword(::google::protobuf::uint32 value);

  // repeated .dullahan.models.TabletMetadata.ColumnMetadata column_metadatas = 4;
  inline int column_metadatas_size() const;
  inline void clear_column_metadatas();
  static const int kColumnMetadatasFieldNumber = 4;
  inline const ::dullahan::models::TabletMetadata_ColumnMetadata& column_metadatas(int index) const;
  inline ::dullahan::models::TabletMetadata_ColumnMetadata* mutable_column_metadatas(int index);
  inline ::dullahan::models::TabletMetadata_ColumnMetadata* add_column_metadatas();
  inline const ::google::protobuf::RepeatedPtrField< ::dullahan::models::TabletMetadata_ColumnMetadata >&
      column_metadatas() const;
  inline ::google::protobuf::RepeatedPtrField< ::dullahan::models::TabletMetadata_ColumnMetadata >*
      mutable_column_metadatas();

  // @@protoc_insertion_point(class_scope:dullahan.models.TabletMetadata)
 private:
  inline void set_has_last_tablet_id();
  inline void clear_has_last_tablet_id();
  inline void set_has_written_endianness();
  inline void clear_has_written_endianness();
  inline void set_has_size_of_bitword();
  inline void clear_has_size_of_bitword();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 last_tablet_id_;
  int written_endianness_;
  ::google::protobuf::uint32 size_of_bitword_;
  ::google::protobuf::RepeatedPtrField< ::dullahan::models::TabletMetadata_ColumnMetadata > column_metadatas_;
  friend void  protobuf_AddDesc_dullahan_2eproto();
  friend void protobuf_AssignDesc_dullahan_2eproto();
  friend void protobuf_ShutdownFile_dullahan_2eproto();

  void InitAsDefaultInstance();
  static TabletMetadata* default_instance_;
};
// ===================================================================


// ===================================================================

// Record_KeyValue

// optional uint32 column = 1;
inline bool Record_KeyValue::has_column() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Record_KeyValue::set_has_column() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Record_KeyValue::clear_has_column() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Record_KeyValue::clear_column() {
  column_ = 0u;
  clear_has_column();
}
inline ::google::protobuf::uint32 Record_KeyValue::column() const {
  // @@protoc_insertion_point(field_get:dullahan.models.Record.KeyValue.column)
  return column_;
}
inline void Record_KeyValue::set_column(::google::protobuf::uint32 value) {
  set_has_column();
  column_ = value;
  // @@protoc_insertion_point(field_set:dullahan.models.Record.KeyValue.column)
}

// optional bytes value = 2;
inline bool Record_KeyValue::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Record_KeyValue::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Record_KeyValue::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Record_KeyValue::clear_value() {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& Record_KeyValue::value() const {
  // @@protoc_insertion_point(field_get:dullahan.models.Record.KeyValue.value)
  return *value_;
}
inline void Record_KeyValue::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set:dullahan.models.Record.KeyValue.value)
}
inline void Record_KeyValue::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(value);
  // @@protoc_insertion_point(field_set_char:dullahan.models.Record.KeyValue.value)
}
inline void Record_KeyValue::set_value(const void* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dullahan.models.Record.KeyValue.value)
}
inline ::std::string* Record_KeyValue::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    value_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dullahan.models.Record.KeyValue.value)
  return value_;
}
inline ::std::string* Record_KeyValue::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Record_KeyValue::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dullahan.models.Record.KeyValue.value)
}

// -------------------------------------------------------------------

// Record

// optional fixed64 timestamp = 1;
inline bool Record::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Record::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Record::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Record::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::uint64 Record::timestamp() const {
  // @@protoc_insertion_point(field_get:dullahan.models.Record.timestamp)
  return timestamp_;
}
inline void Record::set_timestamp(::google::protobuf::uint64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:dullahan.models.Record.timestamp)
}

// optional bytes id = 2;
inline bool Record::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Record::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Record::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Record::clear_id() {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& Record::id() const {
  // @@protoc_insertion_point(field_get:dullahan.models.Record.id)
  return *id_;
}
inline void Record::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set:dullahan.models.Record.id)
}
inline void Record::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(value);
  // @@protoc_insertion_point(field_set_char:dullahan.models.Record.id)
}
inline void Record::set_id(const void* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:dullahan.models.Record.id)
}
inline ::std::string* Record::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:dullahan.models.Record.id)
  return id_;
}
inline ::std::string* Record::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Record::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:dullahan.models.Record.id)
}

// repeated .dullahan.models.Record.KeyValue values = 3;
inline int Record::values_size() const {
  return values_.size();
}
inline void Record::clear_values() {
  values_.Clear();
}
inline const ::dullahan::models::Record_KeyValue& Record::values(int index) const {
  // @@protoc_insertion_point(field_get:dullahan.models.Record.values)
  return values_.Get(index);
}
inline ::dullahan::models::Record_KeyValue* Record::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:dullahan.models.Record.values)
  return values_.Mutable(index);
}
inline ::dullahan::models::Record_KeyValue* Record::add_values() {
  // @@protoc_insertion_point(field_add:dullahan.models.Record.values)
  return values_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dullahan::models::Record_KeyValue >&
Record::values() const {
  // @@protoc_insertion_point(field_list:dullahan.models.Record.values)
  return values_;
}
inline ::google::protobuf::RepeatedPtrField< ::dullahan::models::Record_KeyValue >*
Record::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:dullahan.models.Record.values)
  return &values_;
}

// -------------------------------------------------------------------

// TabletMetadata_ColumnMetadata

// optional uint32 column = 1;
inline bool TabletMetadata_ColumnMetadata::has_column() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TabletMetadata_ColumnMetadata::set_has_column() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TabletMetadata_ColumnMetadata::clear_has_column() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TabletMetadata_ColumnMetadata::clear_column() {
  column_ = 0u;
  clear_has_column();
}
inline ::google::protobuf::uint32 TabletMetadata_ColumnMetadata::column() const {
  // @@protoc_insertion_point(field_get:dullahan.models.TabletMetadata.ColumnMetadata.column)
  return column_;
}
inline void TabletMetadata_ColumnMetadata::set_column(::google::protobuf::uint32 value) {
  set_has_column();
  column_ = value;
  // @@protoc_insertion_point(field_set:dullahan.models.TabletMetadata.ColumnMetadata.column)
}

// optional .dullahan.models.TabletMetadata.ColumnMetadata.IndexType type = 2;
inline bool TabletMetadata_ColumnMetadata::has_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TabletMetadata_ColumnMetadata::set_has_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TabletMetadata_ColumnMetadata::clear_has_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TabletMetadata_ColumnMetadata::clear_type() {
  type_ = 0;
  clear_has_type();
}
inline ::dullahan::models::TabletMetadata_ColumnMetadata_IndexType TabletMetadata_ColumnMetadata::type() const {
  // @@protoc_insertion_point(field_get:dullahan.models.TabletMetadata.ColumnMetadata.type)
  return static_cast< ::dullahan::models::TabletMetadata_ColumnMetadata_IndexType >(type_);
}
inline void TabletMetadata_ColumnMetadata::set_type(::dullahan::models::TabletMetadata_ColumnMetadata_IndexType value) {
  assert(::dullahan::models::TabletMetadata_ColumnMetadata_IndexType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:dullahan.models.TabletMetadata.ColumnMetadata.type)
}

// -------------------------------------------------------------------

// TabletMetadata

// optional uint64 last_tablet_id = 1;
inline bool TabletMetadata::has_last_tablet_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TabletMetadata::set_has_last_tablet_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TabletMetadata::clear_has_last_tablet_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TabletMetadata::clear_last_tablet_id() {
  last_tablet_id_ = GOOGLE_ULONGLONG(0);
  clear_has_last_tablet_id();
}
inline ::google::protobuf::uint64 TabletMetadata::last_tablet_id() const {
  // @@protoc_insertion_point(field_get:dullahan.models.TabletMetadata.last_tablet_id)
  return last_tablet_id_;
}
inline void TabletMetadata::set_last_tablet_id(::google::protobuf::uint64 value) {
  set_has_last_tablet_id();
  last_tablet_id_ = value;
  // @@protoc_insertion_point(field_set:dullahan.models.TabletMetadata.last_tablet_id)
}

// optional .dullahan.models.TabletMetadata.Endianness written_endianness = 2;
inline bool TabletMetadata::has_written_endianness() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TabletMetadata::set_has_written_endianness() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TabletMetadata::clear_has_written_endianness() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TabletMetadata::clear_written_endianness() {
  written_endianness_ = 0;
  clear_has_written_endianness();
}
inline ::dullahan::models::TabletMetadata_Endianness TabletMetadata::written_endianness() const {
  // @@protoc_insertion_point(field_get:dullahan.models.TabletMetadata.written_endianness)
  return static_cast< ::dullahan::models::TabletMetadata_Endianness >(written_endianness_);
}
inline void TabletMetadata::set_written_endianness(::dullahan::models::TabletMetadata_Endianness value) {
  assert(::dullahan::models::TabletMetadata_Endianness_IsValid(value));
  set_has_written_endianness();
  written_endianness_ = value;
  // @@protoc_insertion_point(field_set:dullahan.models.TabletMetadata.written_endianness)
}

// optional uint32 size_of_bitword = 3;
inline bool TabletMetadata::has_size_of_bitword() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TabletMetadata::set_has_size_of_bitword() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TabletMetadata::clear_has_size_of_bitword() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TabletMetadata::clear_size_of_bitword() {
  size_of_bitword_ = 0u;
  clear_has_size_of_bitword();
}
inline ::google::protobuf::uint32 TabletMetadata::size_of_bitword() const {
  // @@protoc_insertion_point(field_get:dullahan.models.TabletMetadata.size_of_bitword)
  return size_of_bitword_;
}
inline void TabletMetadata::set_size_of_bitword(::google::protobuf::uint32 value) {
  set_has_size_of_bitword();
  size_of_bitword_ = value;
  // @@protoc_insertion_point(field_set:dullahan.models.TabletMetadata.size_of_bitword)
}

// repeated .dullahan.models.TabletMetadata.ColumnMetadata column_metadatas = 4;
inline int TabletMetadata::column_metadatas_size() const {
  return column_metadatas_.size();
}
inline void TabletMetadata::clear_column_metadatas() {
  column_metadatas_.Clear();
}
inline const ::dullahan::models::TabletMetadata_ColumnMetadata& TabletMetadata::column_metadatas(int index) const {
  // @@protoc_insertion_point(field_get:dullahan.models.TabletMetadata.column_metadatas)
  return column_metadatas_.Get(index);
}
inline ::dullahan::models::TabletMetadata_ColumnMetadata* TabletMetadata::mutable_column_metadatas(int index) {
  // @@protoc_insertion_point(field_mutable:dullahan.models.TabletMetadata.column_metadatas)
  return column_metadatas_.Mutable(index);
}
inline ::dullahan::models::TabletMetadata_ColumnMetadata* TabletMetadata::add_column_metadatas() {
  // @@protoc_insertion_point(field_add:dullahan.models.TabletMetadata.column_metadatas)
  return column_metadatas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dullahan::models::TabletMetadata_ColumnMetadata >&
TabletMetadata::column_metadatas() const {
  // @@protoc_insertion_point(field_list:dullahan.models.TabletMetadata.column_metadatas)
  return column_metadatas_;
}
inline ::google::protobuf::RepeatedPtrField< ::dullahan::models::TabletMetadata_ColumnMetadata >*
TabletMetadata::mutable_column_metadatas() {
  // @@protoc_insertion_point(field_mutable_list:dullahan.models.TabletMetadata.column_metadatas)
  return &column_metadatas_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace models
}  // namespace dullahan

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::dullahan::models::TabletMetadata_ColumnMetadata_IndexType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dullahan::models::TabletMetadata_ColumnMetadata_IndexType>() {
  return ::dullahan::models::TabletMetadata_ColumnMetadata_IndexType_descriptor();
}
template <> struct is_proto_enum< ::dullahan::models::TabletMetadata_Endianness> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dullahan::models::TabletMetadata_Endianness>() {
  return ::dullahan::models::TabletMetadata_Endianness_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dullahan_2eproto__INCLUDED
